{"version":3,"sources":["projects.js"],"names":["express","require","Participation","Project","Customer","Employee","EmpSkill","Task","catchErrors","rawAttributes","router","Router","get","req","res","next","findAll","include","model","as","through","where","emp_no","session","user","projects","render","findOne","project_no","params","project","console","log","project_emp","projectPercent","employeePercent","tasks","current_state","endTasks","empTasks","empEndTasks","verifyTask","progressTask","uncheckTask","String","Math","round","length","post","create","task","empList","skill_no","empSkill","i","attributes","emp","push","name","set","Set","send","module","exports"],"mappings":"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","sourcesContent":["var express = require('express');\nvar Participation = require('../models/participation');\nvar Project = require('../models/project');\nvar Customer = require('../models/customer');\nvar Employee = require('../models/employee');\nvar EmpSkill = require('../models/emp_skill');\nvar Task = require('../models/task');\n\nconst catchErrors = require('../lib/async-error');\nconst { rawAttributes } = require('../models/customer');\nvar router = express.Router();\n\nrouter.get('/', catchErrors(async (req, res, next) => {\n  const projects = await Project.findAll({\n    include: [\n      {    \n        model: Employee,\n        as: 'project_emp',\n        through: {\n          where: { emp_no: req.session.user.emp_no }\n        }\n      }\n    ]\n  });\n  res.render('project/list', { projects: projects });\n}));\n\nrouter.get('/:project_no', catchErrors(async (req, res, next) => {\n  const project = await Project.findOne({\n    where: { project_no: req.params.project_no },\n    include: [\n      {\n        model: Employee,\n        as: 'project_emp'\n      },\n      {\n        model: Customer\n      }\n    ]\n  });\n  console.log(project.project_emp[0]);\n  res.render('project/details', { project: project });\n}));\n\n// 업무 진척도 조회 페이지\nrouter.get('/tasks/:project_no/:emp_no', catchErrors(async (req, res) => {\n  var projectPercent = 0;\n  var employeePercent = 0;\n  var employee;\n\n  // 모든 태스크 가져오기\n  const tasks = await Task.findAll({\n      where: { project_no: req.params.project_no }\n  });\n\n  // 모든 end 태스크 가져오기\n  const endTasks = await Task.findAll({\n      where: {\n          project_no: req.params.project_no,\n          current_state: 'end',\n      }\n  });\n\n  // 직원의 모든 태스크 가져오기\n  const empTasks = await Task.findAll({\n    where: {\n        project_no: req.params.project_no,\n        emp_no: req.params.emp_no,            \n    }\n  });\n\n  // 직원의 모든 end 태스크 가져오기\n  const empEndTasks = await Task.findAll({\n      where: {\n          project_no: req.params.project_no,\n          emp_no: req.params.emp_no,\n          current_state: 'end',\n      }\n  });\n\n  // 사용자의 verify 태스크 개수 추가\n  const verifyTask = await Task.findAll({\n      where: {\n          project_no: req.params.project_no,\n          emp_no: req.params.emp_no,\n          current_state: 'verify',\n      }\n  });\n\n  // 사용자의 progress 태스크 개수 추가\n  const progressTask = await Task.findAll({\n      where: {\n          project_no: req.params.project_no,\n          emp_no: req.params.emp_no,\n          current_state: 'progress',\n      }\n  });\n\n  // 사용자의 uncheck 태스크 개수 추가\n  const uncheckTask = await Task.findAll({\n      where: {\n          project_no: req.params.project_no,\n          emp_no: req.params.emp_no,\n          current_state: 'uncheck',\n      }\n  });\n\n  projectPercent = String(Math.round(endTasks.length / tasks.length * 100));\n  employeePercent = String(Math.round(empEndTasks.length / empTasks.length * 100));\n\n  // employeeTaskList.push(Math.round(endTasks.length / tasks.length * 100));\n  // employeeTaskList.push(endTasks.length);\n  // employeeTaskList.push(verifyTask.length);\n  // employeeTaskList.push(progressTask.length);\n  // employeeTaskList.push(uncheckTask.length);\n\n  res.render('project/checkTask', { projectPercent, employeePercent });\n}));\n\n// addTask 페이지 응답 \nrouter.get('/addTask', catchErrors(async (req, res) => {\n  res.render('/project/addTask', {});\n}));\n\n// 업무를 DB에 추가\nrouter.post('/addTask', catchErrors(async (req, res) => {\n  const task = await Task.create({\n    \n  });\n}));\n\n// 스킬셋이 HTML & JAVASCRIPT인 직원 리스트 응답\nrouter.get('/addTask/HJ', catchErrors(async (req, res) => {\n  // 직원 리스트 선언\n  let empList = [];\n\n  // EmpSkill 가져오기\n  const empSkill = await EmpSkill.findAll({\n    where: {\n      skill_no: [1, 2],\n    }\n  });\n  \n  // 해당 스킬셋을 가진 직원들에 대해 모든 이름 값을 가져오기 위한 반복문\n  for (let i=0; i<empSkill.length; i++) {\n    // Employee 가져오기\n    const emp = await Employee.findOne({\n      where: {\n        emp_no: empSkill[i].emp_no,\n      },\n      attributes: ['name'],\n    });\n\n    // 모든 직원 추가\n    empList.push([empSkill[i].emp_no, emp.name]);\n  }\n  // 중복 제거\n  const set = new Set(empList);\n  console.log(set);\n  empList = [...set];\n  console.log(empList[1][0] == empList[3][0]);\n  // 최종 리스트 전달\n  res.send(empList);\n}));\n\n// 스킬셋이 C# & C/C++인 직원 리스트 응답\nrouter.get('addTask/CCC', catchErrors(async (req, res) => {\n  const empSkill = await EmpSkill.findAll({\n    where: {\n      skill_no: [3, 4],\n    }\n  });\n}));\n\n// 스킬셋이 Dart/Flutter & Java 인 직원 리스트 응답\nrouter.get('addTask/DFJ', catchErrors(async (req, res) => {\n  const empSkill = await EmpSkill.findAll({\n    where: {\n      skill_no: [5, 6],\n    }\n  });\n}));\n\n// 스킬셋이 Dart/Flutter & Java 인 직원 리스트 응답\nrouter.get('addTask/Python', catchErrors(async (req, res) => {\n  const empSkill = await EmpSkill.findAll({\n    where: {\n      skill_no: 7,\n    }\n  });\n}));\n\nmodule.exports = router;\n"],"file":"projects.dev.js"}