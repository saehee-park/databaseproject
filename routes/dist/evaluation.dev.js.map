{"version":3,"sources":["evaluation.js"],"names":["express","require","router","Router","catchErrors","Project","Employee","Participation","PeerEvaluation","PMEvaluation","CustomerEvaluation","get","req","res","next","render","project_list","findAll","attributes","projects","i","length","push","project_no","project_name","send","employee_list","where","params","participations","findOne","emp_no","employee","name","allEvaluationList","evaluationResult","project","sum","non_evaluator_no","peer_eval","evaluation_score1","j","evaluation_score2","Math","round","pm_eval","customer_eval","evaluation_score3","evaluation_result_list","peer_result","pm_result","customer_result","module","exports"],"mappings":"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","sourcesContent":["// 기본 모듈 Import\nvar express = require('express');\nvar router = express.Router();\nconst catchErrors = require(\"../lib/async-error\");\nconst { Project, Employee, Participation, PeerEvaluation, PMEvaluation, CustomerEvaluation} = require('../models');\n\n\nrouter.get('/peer', async (req, res, next) => {\n    res.render('evaluation/peer_evaluation');\n});\n\nrouter.get('/pm', async (req, res) => {\n    res.render('evaluation/pm_evaluation');\n});\n\nrouter.get('/customer', async (req, res) => {\n    res.render('evaluation/customer_evaluation');\n});\n\nrouter.get('/inputPm_evaluation', async (req, res) => {\n    res.render('evaluation/inputPm_evaluation.');\n});\n\nrouter.get('/inputCustomer_evaluation', async (req, res) => {\n    res.render('evaluation/inputCustomer_evaluation.');\n});\n\nrouter.get('/inquiry', async (req, res) => {\n    res.render('management/evaluationResult_inquiry');\n});\n\nrouter.get('/evaluate', async(req, res) => {\n    res.render('management/registerEvaluation');\n});\n\nrouter.get('/index', async(req, res) => {\n    res.render('evaluation/index');\n});\n\nrouter.get('/project_list', catchErrors(async (req, res) => {\n    // 빈 리스트\n    var project_list = [];\n\n    // 모든 프로젝트를 가져옴\n    const projects = await Project.findAll({\n        attributes: ['project_no', 'project_name']\n    });\n\n    // 모든 프로젝트의 정보를 담음 (project_no, project_name) 쌍으로\n    for(let i=0; i<projects.length; i++) {\n      project_list.push([projects[i].project_no, projects[i].project_name]);\n    }\n    \n    // 참여한 리스트 전달\n    res.send(project_list);\n}));\n\nrouter.get('/employee_list/:project_no', catchErrors(async (req, res) => {\n    // 빈 리스트\n    var employee_list = [];\n\n    // 해당 프로젝트에 대해 참여하고 있는 참여직원 튜플들을 가져옴\n    const participations = await Participation.findAll({\n        where: {\n            project_no: req.params.project_no\n        },\n    });\n\n    // 모든 프로젝트의 정보를 담음 (employee_no, employee_name) 쌍으로\n    for(let i=0; i<participations.length; i++) {\n        const employee = await Employee.findOne({\n            where: { emp_no: participations[i].emp_no },\n            attributes: ['name'],\n        });\n        employee_list.push([participations[i].emp_no, employee.name]);\n    }\n    \n    // 참여한 리스트 전달\n    res.send(employee_list);\n}));\n\n// 모든 프로젝트의 직원들에 대한 평가 리스트를 \nrouter.get('/result/all', catchErrors(async (req, res) => {\n    var allEvaluationList = [];\n    //모든 프로젝트에 참여자\n    const participations = await Participation.findAll({});\n\n    //각각의 프로젝트 참여자에 대한 list 생성\n    for(let i=0; i<participations.length; i++) {\n        let evaluationResult = [];\n\n        // 직원 이름 추가\n        const employee = await Employee.findOne({\n            where: {\n                emp_no: participations[i].emp_no\n            },\n        });\n        evaluationResult.push(employee.emp_no);\n        evaluationResult.push(employee.name);\n        \n    \n        // 프로젝트 이름 추가\n        const project = await Project.findOne({\n            where: {\n                project_no: participations[i].project_no\n            },\n        });\n        evaluationResult.push(project.project_name);\n\n        // 동료 평가 점수 추가\n        let sum = 0;\n        const peer_eval = await PeerEvaluation.findAll({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score1 = 0;\n        if(peer_eval.length != 0) {\n            for(let j=0; j<peer_eval.length; j++) {\n                if(peer_eval[j] != null)\n                    sum += (peer_eval[j].evaluation_score1 + peer_eval[j].evaluation_score2) / 2;\n            }\n            evaluation_score1 = Math.round(sum/peer_eval.length);\n            evaluationResult.push(evaluation_score1 + \"점\");\n        }\n\n        // PM 평가 점수 추가\n        const pm_eval = await PMEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n        let evaluation_score2 = 0;\n        if (pm_eval != null) {\n            evaluation_score2 = (pm_eval.evaluation_score1 + pm_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score2 + \"점\");\n        }\n\n        // 고객 평가 점수 추가\n        const customer_eval = await CustomerEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score3 = 0;\n        if (customer_eval != null) {\n            evaluation_score3 = (customer_eval.evaluation_score1 + customer_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score3 + \"점\");\n        }\n    \n        // 총합 점수 추가\n        evaluationResult.push(Math.round(evaluation_score1 + evaluation_score2 + evaluation_score3) + \"점\");\n\n        // 평균 추가\n        evaluationResult.push(Math.round((evaluation_score1 + evaluation_score2 + evaluation_score3)/3) + \"점\");\n\n        // 평가 정보 리스트 전달\n        if(evaluationResult.length == 8)\n            allEvaluationList.push(evaluationResult);\n    }\n\n    res.send(allEvaluationList);\n}));\n\n\n\n\nrouter.get('/result/empName', catchErrors(async (req, res) => {\n    var allEvaluationList = [];\n    //모든 프로젝트에 참여자\n    const participations = await Participation.findAll({});\n\n    //각각의 프로젝트 참여자에 대한 list 생성\n    for(let i=0; i<participations.length; i++) {\n        let evaluationResult = [];\n\n        // 직원 이름 추가\n        const employee = await Employee.findOne({\n            where: {\n                emp_no: participations[i].emp_no\n            },\n        });\n        evaluationResult.push(employee.name);\n    \n        // 프로젝트 이름 추가\n        const project = await Project.findOne({\n            where: {\n                project_no: participations[i].project_no\n            },\n        });\n        evaluationResult.push(project.project_name);\n\n        // 동료 평가 점수 추가\n        let sum = 0;\n        const peer_eval = await PeerEvaluation.findAll({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score1 = 0;\n        if(peer_eval.length != 0) {\n            for(let j=0; j<peer_eval.length; j++) {\n                if(peer_eval[j] != null)\n                    sum += (peer_eval[j].evaluation_score1 + peer_eval[j].evaluation_score2) / 2;\n            }\n            evaluation_score1 = Math.round(sum/peer_eval.length);\n            evaluationResult.push(evaluation_score1);\n        }\n\n        // PM 평가 점수 추가\n        const pm_eval = await PMEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n        let evaluation_score2 = 0;\n        if (pm_eval != null) {\n            evaluation_score2 = (pm_eval.evaluation_score1 + pm_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score2);\n        }\n\n        // 고객 평가 점수 추가\n        const customer_eval = await CustomerEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score3 = 0;\n        if (customer_eval != null) {\n            evaluation_score3 = (customer_eval.evaluation_score1 + customer_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score3);\n        }\n    \n        // 총합 점수 추가\n        evaluationResult.push(Math.round(evaluation_score1 + evaluation_score2 + evaluation_score3));\n\n        // 평균 추가\n        evaluationResult.push(Math.round((evaluation_score1 + evaluation_score2 + evaluation_score3)/3));\n\n        // 평가 정보 리스트 전달\n        if(evaluationResult.length == 7)\n            allEvaluationList.push(evaluationResult);\n    }\n\n    res.send(allEvaluationList);\n}));\n\nrouter.get('/result/empNum/:emp_no', catchErrors(async (req, res) => {\n    var allEvaluationList = [];\n    //모든 프로젝트에 참여자\n    const participations = await Participation.findAll({\n        where: {\n            emp_no: req.params.emp_no,\n        }\n    });\n\n    //각각의 프로젝트 참여자에 대한 list 생성\n    for(let i=0; i<participations.length; i++) {\n        let evaluationResult = [];\n\n        // 직원 이름 추가\n        const employee = await Employee.findOne({\n            where: {\n                emp_no: participations[i].emp_no\n            },\n        });\n        evaluationResult.push(employee.name);\n    \n        // 프로젝트 이름 추가\n        const project = await Project.findOne({\n            where: {\n                project_no: participations[i].project_no\n            },\n        });\n        evaluationResult.push(project.project_name);\n\n        // 동료 평가 점수 추가\n        let sum = 0;\n        const peer_eval = await PeerEvaluation.findAll({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score1 = 0;\n        if(peer_eval.length != 0) {\n            for(let j=0; j<peer_eval.length; j++) {\n                if(peer_eval[j] != null)\n                    sum += (peer_eval[j].evaluation_score1 + peer_eval[j].evaluation_score2) / 2;\n            }\n            evaluation_score1 = Math.round(sum/peer_eval.length);\n            evaluationResult.push(evaluation_score1);\n        }\n\n        // PM 평가 점수 추가\n        const pm_eval = await PMEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n        let evaluation_score2 = 0;\n        if (pm_eval != null) {\n            evaluation_score2 = (pm_eval.evaluation_score1 + pm_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score2);\n        }\n\n        // 고객 평가 점수 추가\n        const customer_eval = await CustomerEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score3 = 0;\n        if (customer_eval != null) {\n            evaluation_score3 = (customer_eval.evaluation_score1 + customer_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score3);\n        }\n    \n        // 총합 점수 추가\n        evaluationResult.push(Math.round(evaluation_score1 + evaluation_score2 + evaluation_score3));\n\n        // 평균 추가\n        evaluationResult.push(Math.round((evaluation_score1 + evaluation_score2 + evaluation_score3)/3));\n\n        // 평가 정보 리스트 전달\n        if(evaluationResult.length == 7)\n            allEvaluationList.push(evaluationResult);\n    }\n\n    res.send(allEvaluationList);\n}));\n\nrouter.get('/result/projectName', catchErrors(async (req, res) => {\n    var allEvaluationList = [];\n    //모든 프로젝트에 참여자\n    const participations = await Participation.findAll({});\n\n    //각각의 프로젝트 참여자에 대한 list 생성\n    for(let i=0; i<participations.length; i++) {\n        let evaluationResult = [];\n\n        // 직원 이름 추가\n        const employee = await Employee.findOne({\n            where: {\n                emp_no: participations[i].emp_no\n            },\n        });\n        evaluationResult.push(employee.name);\n    \n        // 프로젝트 이름 추가\n        const project = await Project.findOne({\n            where: {\n                project_no: participations[i].project_no\n            },\n        });\n        evaluationResult.push(project.project_name);\n\n        // 동료 평가 점수 추가\n        let sum = 0;\n        const peer_eval = await PeerEvaluation.findAll({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score1 = 0;\n        if(peer_eval.length != 0) {\n            for(let j=0; j<peer_eval.length; j++) {\n                if(peer_eval[j] != null)\n                    sum += (peer_eval[j].evaluation_score1 + peer_eval[j].evaluation_score2) / 2;\n            }\n            evaluation_score1 = Math.round(sum/peer_eval.length);\n            evaluationResult.push(evaluation_score1 + \"점\");\n        }\n\n        // PM 평가 점수 추가\n        const pm_eval = await PMEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n        let evaluation_score2 = 0;\n        if (pm_eval != null) {\n            evaluation_score2 = (pm_eval.evaluation_score1 + pm_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score2 + \"점\");\n        }\n\n        // 고객 평가 점수 추가\n        const customer_eval = await CustomerEvaluation.findOne({\n            where: {\n                non_evaluator_no: participations[i].emp_no,\n                project_no: participations[i].project_no,\n            }\n        });\n\n        let evaluation_score3 = 0;\n        if (customer_eval != null) {\n            evaluation_score3 = (customer_eval.evaluation_score1 + customer_eval.evaluation_score2)/2;\n            evaluationResult.push(evaluation_score3 + \"점\");\n        }\n    \n        // 총합 점수 추가\n        evaluationResult.push(Math.round(evaluation_score1 + evaluation_score2 + evaluation_score3) + \"점\");\n\n        // 평균 추가\n        evaluationResult.push(Math.round((evaluation_score1 + evaluation_score2 + evaluation_score3)/3) + \"점\");\n\n        // 평가 정보 리스트 전달\n        if(evaluationResult.length == 7)\n            allEvaluationList.push(evaluationResult);\n    }\n\n    res.send(allEvaluationList);\n}));\n\n// 특정 프로젝트의 특정 직원에 대한 평과 결과들에 대한 리스트 응답 \nrouter.get('/result/:emp_no/:project_no', catchErrors(async (req, res) => {\n    // 빈 리스트\n    var evaluation_result_list = [];\n\n    \n    evaluation_result_list.push(project.project_name);\n    // 동료 평가에 대한 평가 점수들의 평균을 푸쉬하기 위한 과정\n    const peer_result = await PeerEvaluation.findOne({\n        where: {\n            project_no: req.params.project_no,\n            non_evaluator_no: req.params.emp_no\n        },\n    });\n    \n    evaluation_result_list.push(evaluation_score1);\n    // PM 평가에 대한 평가 점수들의 평균을 푸쉬하기 위한 과정\n    const pm_result = await PMEvaluation.findOne({\n        where: {\n            project_no: req.params.project_no,\n            non_evaluator_no: req.params.emp_no\n        },\n    });\n    var evaluation_score2 = (pm_result.evaluation_score1 + pm_result.evaluation_score2)/2;\n    evaluation_result_list.push(evaluation_score2);\n    // 고객 평가에 대한 평가 점수들의 평균을 푸쉬하기 위한 과정\n    const customer_result = await CustomerEvaluation.findOne({\n        where: {\n            project_no: req.params.project_no,\n            non_evaluator_no: req.params.emp_no\n        },\n    });\n    var evaluation_score3 = (customer_result.evaluation_score1 + customer_result.evaluation_score2)/2;\n    evaluation_result_list.push(evaluation_score3);\n    \n    \n}));\n\nmodule.exports = router;"],"file":"evaluation.dev.js"}