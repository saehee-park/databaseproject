{"version":3,"sources":["management.js"],"names":["express","require","router","Router","Employee","Participation","Customer","Project","catchErrors","get","req","res","next","render","findAll","customers","post","create","customer_name","body","name","customer","flash","redirect","where","dept_no","marketing","research","business","development","console","log","project_name","start_date","start","end_date","end","state","description","customer_id","project","employee","emp_no","project_no","participation_date","module","exports"],"mappings":"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","sourcesContent":["var express = require(\"express\");\nvar router = express.Router();\nvar Employee = require(\"../models/employee\");\nvar Participation = require(\"../models/participation\");\nvar Customer = require(\"../models/customer\");\nvar Project = require(\"../models/project\");\nconst catchErrors = require(\"../lib/async-error\");\n\nrouter.get('/', function (req, res, next) {\n  res.render('management/index',{});\n});\n\nrouter.get('/customer/register', catchErrors(async (req, res, next) => {\n  res.render('management/registerCustomer', {});\n}));\n\nrouter.get('/customer/list', catchErrors(async (req, res, next) => {\n  const customers = await Customer.findAll();\n  res.render('management/customerList', {customers: customers});\n}));\n\nrouter.post('/customer/register', catchErrors(async (req, res, next) => {\n  const customer = await Customer.create({\n    customer_name: req.body.name\n  });\n  req.flash(\"success\", \"정상적으로 등록되었습니다.\");\n  res.redirect('/');\n}));\n\nrouter.get('/project/register', catchErrors(async (req, res, next) => {\n  const customers = await Customer.findAll();\n  const marketing = await Employee.findAll({ where: { dept_no: 1 } });\n  const research = await Employee.findAll({ where: { dept_no: 2 } });\n  const business = await Employee.findAll({ where: { dept_no: 3 } });\n  const development = await Employee.findAll({ where: { dept_no: 4 } });\n  res.render('management/registerProject', { \n    customers: customers, marketing: marketing, research: research, business: business, development: development });\n}));\n\nrouter.get('/project/search', catchErrors(async (req, res, next) => {\n  res.render('management/searchProject', {});\n}));\n\nrouter.post('/project/register', catchErrors(async (req, res, next) => {\n  //새로운 프로젝트를 생성하면서 동시에 participation 생성해야함.\n\n  console.log(req.body);\n\n  const project = await Project.create({\n    project_name: req.body.name,\n    start_date: req.body.start,\n    end_date: req.body.end,\n    state: req.body.state,\n    description: req.body.description,\n    customer_id: req.body.customer\n  });\n\n  for(let employee of req.body.employee) {\n    await Participation.create({\n      emp_no: employee,\n      project_no: project.project_no,\n      participation_date: project.start_date\n    });\n  }\n\n  req.flash('success', '정상적으로 등록되었습니다.');\n  res.render('project/list', {});\n}));\n\nmodule.exports = router;"],"file":"management.dev.js"}